apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: oauth2-proxy
spec:
  ingressClassName: haproxy
  tls:
    - secretName: cert-echo-production
      hosts:
        - "echo.emisia.net"
  rules:
  - host: "echo.emisia.net"
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
  - host: "echo.lan"
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echoserver
  namespace: oauth2-proxy
  annotations:
    ingress.kubernetes.io/auth-url: "https://echo.emisia.net/oauth2/auth"
    ingress.kubernetes.io/auth-signin: "https://echo.emisia.net/oauth2/start?rd=https%3A%2F%2Fecho.emisia.net%2Foauth2%2Fcallback"
spec:
  ingressClassName: haproxy
  tls:
    - secretName: cert-echo-production
      hosts:
        - "echo.emisia.net"
  rules:
  - host: "echo.emisia.net"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: echoserver
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echoserver-lan
  namespace: oauth2-proxy
  annotations:
    # ingress.kubernetes.io/auth-url: "http://echo.lan/oauth2/auth"
    # ingress.kubernetes.io/auth-signin: "http://echo.lan/oauth2/start?rd=https%3A%2F%2Fecho.lan%2Foauth2%2Fcallback"
spec:
  ingressClassName: haproxy
  rules:
  - host: "echo.lan"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: echoserver
            port:
              number: 8080              